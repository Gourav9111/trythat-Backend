name: CI/CD Pipeline with Security Scans and Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Build
        run: npm run build

  SCA_snyk_scan:
    name: Run Snyk SCA Scan
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Snyk Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test

  SAST_sonarcloud_scan:
    name: Run SonarCloud SAST Scan
    needs: SCA_snyk_scan
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: Run SonarCloud scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Gourav9111_trythat-Backend \
            -Dsonar.organization=gourav9111 \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -X

  docker_build_and_push:
    name: Build and Push Docker Image
    needs: SAST_sonarcloud_scan
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/trythat-backend:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/trythat-backend:latest

  deploy:
    name: Deploy Backend to AWS EC2
    needs: docker_build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker ec2-user

            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/trythat-backend:latest

            sudo docker stop trythat-backend || true
            sudo docker rm trythat-backend || true

            sudo docker run -d -p 8080:80 --name trythat-backend ${{ secrets.DOCKER_USERNAME }}/trythat-backend:latest

            sudo docker system prune -f
          EOF

  DAST_zap_scan:
    name: Run ZAP DAST Scan
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Run ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.ZAP_PAT }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://13.201.191.234/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

  container_trivy_scan:
    name: Run Trivy Container Security Scan
    needs: docker_build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/trythat-backend:latest'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
